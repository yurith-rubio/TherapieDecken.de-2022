<!-- snippet: sidebar-tags-filter.liquid -->

{%- comment -%} CSS Added {%- endcomment -%}
{{ 'filters.css' | asset_url | stylesheet_tag}}


  {% if collection.title contains "Therapiekissen" and current_tags.size > 0 %}
    <div class="clear-all-wr"><a href="https://therapiedecken.de/collections/therapiekissen" class="Heading u-h5 tag_clear_all">Alle Filter entfernen</a></div>
    <div class="Heading u-h5">Filtern nach</div>
  {% elsif collection.title contains "Ersatzbezüge" and current_tags.size > 0 %}
    <div class="clear-all-wr"><a href="https://therapiedecken.de/collections/ersatzbezuge-fur-therapiedecken" class="Heading u-h5 tag_clear_all">Alle Filter entfernen</a></div>
    <div class="Heading u-h5">Filtern nach</div>
   {% elsif collection.title contains "Bettwäschen" and current_tags.size > 0 %}
    <div class="clear-all-wr"><a href="https://therapiedecken.de/collections/bettwaschen-set-fur-therapiedecken" class="Heading u-h5 tag_clear_all">Alle Filter entfernen</a></div>
    <div class="Heading u-h5">Filtern nach</div>
  {% endif %}


<div class="tag_top_wr">
  {% for tag in current_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
      <div class="tag_top">{{ tag_value[0] | link_to_remove_tag: tag }}</div>
  {% endfor %}
</div>

<div>  
  <p class="Heading u-h5 FilterTag__name">Farbe</p>
  <div class="filter-color-container">
  {% for tag in collection.all_tags %}
      {% assign tag_value = tag | split: "-" | slice: 1 %}
      {% assign tag_key = tag | split: "-" | slice: 0 %}

      {% assign selected = "" %}
      {% if current_tags contains tag %}
          {% assign selected = "filter_colo_selected" %}	
      {% endif %}

      {% if tag_key[0] == "farbe" %}
          <div class="filter_color_wr {{ selected }}" data-color="{{ tag }}">
            <div class="filter_color {{ selected }} filter_color_{{ tag_value[0] }}" data-color="{{ tag }}"></div>
          </div>
      {% endif %}
  {% endfor %}
  </div>
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Thema</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "thema" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected"  %}	
    	{% endif %}
		<div>
          <div class="filter_theme filter_styling" data-theme="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-theme="{{ tag }}"></div>
             <div class="text-radio-tag" data-theme="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Größe</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "size" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected" %}	
    	{% endif %}
		<div>
          <div class="filter_size filter_styling" data-size="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-size="{{ tag }}"></div>
             <div class="text-radio-tag" data-size="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Alter</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "alter" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected"  %}	
    	{% endif %}
		<div>
          <div class="filter_age filter_styling" data-age="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-age="{{ tag }}"></div>
             <div class="text-radio-tag" data-age="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Material</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "material" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected"  %}	
    	{% endif %}
		<div>
          <div class="filter_material filter_styling" data-material="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-material="{{ tag }}"></div>
             <div class="text-radio-tag" data-material="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Muster</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "muster" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected"  %}	
    	{% endif %}
		<div>
          <div class="filter_pattern filter_styling" data-pattern="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-pattern="{{ tag }}"></div>
             <div class="text-radio-tag" data-pattern="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>

<div>
  <p class="Heading u-h5 FilterTag__name">Stil</p>
  {% for tag in collection.all_tags %}
    {% assign tag_value = tag | split: "-" | slice: 1 %}
    {% assign tag_key = tag | split: "-" | slice: 0 %}
	
	{% if tag_key[0] == "stil" %}
		{% assign selected = "" %}
    	{% if current_tags contains tag %}
        	{% assign selected = "filter_selected"  %}	
    	{% endif %}
		<div>
          <div class="filter_style filter_styling" data-style="{{ tag }}">
             <div class="circle-radio {{ selected }}" data-style="{{ tag }}"></div>
             <div class="text-radio-tag" data-style="{{ tag }}">{{ tag_value[0] }}</div>
		  </div>
		</div>
	{% endif %}
  {% endfor %}
</div>



<script type="text/javascript">

  $(".filter_color").click(function (e) {
  	const selectedColor = $(e.target).attr("data-color");
    doFilter(selectedColor);
  });
  
  $(".filter_theme").click(function (e) {
  	const selectedTheme = $(e.target).attr("data-theme");
    doFilter(selectedTheme);
  });
  
  $(".filter_size").click(function (e) {
  	const selectedSize = $(e.target).attr("data-size");
    doFilter(selectedSize);
  });
  
  $(".filter_age").click(function (e) {
  	const selectedAge = $(e.target).attr("data-age");
    doFilter(selectedAge);
  });
  
  $(".filter_material").click(function (e) {
  	const selectedMaterial = $(e.target).attr("data-material");
    doFilter(selectedMaterial);
  });
  
  $(".filter_pattern").click(function (e) {
  	const selectedPattern = $(e.target).attr("data-pattern");
    doFilter(selectedPattern);
  });
  
  $(".filter_style").click(function (e) {
  	const selectedStyle = $(e.target).attr("data-style");
    doFilter(selectedStyle);
  });


  function getCurrentFilters() {
    const collection = "{{ collection.handle }}";
    const parts = location.pathname.split("/");
    const tags = parts[parts.length - 1];
    
    if (tags == "") {
    	return [];
    }
    
    if (tags == collection) {
    	return [];
    }
    
    const filters = tags.split("+");
    return filters.map(parseFilter);
  }
  
  function parseFilter(filter) {
    const parts = filter.split("-");
    return {
      key: parts[0],
      value: parts[1],
      active: true
    };
  }
  
  function insertFilter(activeFilters, newFilter) {
    let filterUpdated = false;
    let updatedFilters = [];
    
    for (const filter of activeFilters) {
      // If the exact same filter is already active, deactivate it
      if (filter.key == newFilter.key && filter.value == newFilter.value) {
        filter.active = false;
        return activeFilters;
      }
      
      // There was already a filter of the same type: update value.
      if (filter.key == newFilter.key) {
        filter.value = newFilter.value;
        return activeFilters;
      }
    }
    
    activeFilters.push(newFilter);
    return activeFilters;
  }
  
  function getTagline(filters) {
    if (!filters || filters.length == 0) {
    	return "";
    }
    
    filters = filters.filter(f => f.active);
    
    return filters.map(f => { 
      return f.key + "-" + f.value; 
    }).join("+");
  }
  
  function doFilter(filter) {
    const newFilter = parseFilter(filter);
    
    // Get current filters from URL params
    const activeFilters = getCurrentFilters();
    
    // Apply the new filter
    const updatedFilters = insertFilter(activeFilters, newFilter);
    
    const tags = getTagline(updatedFilters);
    
    const newUrl = window.location.protocol + '//' + window.location.host + "/collections/{{ collection.handle }}" + "/" + tags;
	
    window.history.pushState({ path: newUrl }, '', newUrl);

    document.dispatchEvent(new CustomEvent('theme:loading:start'));
    location.href = newUrl;
  }
  
   $(document).ready(function() {
    const activeFilters = getCurrentFilters();
    if (activeFilters && activeFilters.length > 0) {
      	const image = $("div.PageHeader__ImageWrapper");
    	const scrollPosition = image.scrollTop() + image.height();
    	$("html, body").animate({scrollTop: scrollPosition}, 350);
    }   	
  });
  
</script>

