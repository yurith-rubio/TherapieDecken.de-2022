<script type="application/json" data-ajax-cart-initial-state>
    {{ cart | json }}
</script>

<script type="module">
    import '{{ "liquid-ajax-cart-v1.10.0.js" | asset_url }}';
</script>

<script type="application/json" data-ajax-cart-configuration>
    {
      "addToCartCssClass": "js-my-cart-open"
    }
</script>

{% comment %} Promo variant id - we need the id of one of the variants {% endcomment %}
{% if settings.gift_product_variant_id != blank %}
  {% assign promoVariant = settings.gift_product_variant_id %}
{% endif %}
{% if settings.gift_product_min_spend != blank %}
  {% assign promoSubtotal = settings.gift_product_min_spend %}
{% endif %}


<script type="module">
  import { subscribeToCartAjaxRequests, subscribeToCartStateUpdate } from '{{ "liquid-ajax-cart-v1.10.0.js" | asset_url }}';

  let countdownMain = document.querySelector("#countdown-main");

  function createCookie(a, b, c) {
    console.log("function createCookie");
    if (c) {
      var d = new Date;
      d.setTime(d.getTime() + c * 60 * 1e3);
      var e = "; expires=" + d.toUTCString()
    } else var e = "";
    document.cookie = a + "=" + b + e + "; path=/"
  }
  
  function readCookie(a) {
    for (var b = a + "=", c = document.cookie.split(";"), d = 0; d < c.length; d++) {
      for (var e = c[d];
        " " == e.charAt(0);) e = e.substring(1, e.length);
      if (0 == e.indexOf(b)) return e.substring(b.length, e.length)
    }
    return null
  }
  
  function eraseCookie(a) {
    createCookie(a, "", -1)
  }
  
  function crtmedir(a) {
    var b = document.createDocumentFragment(),
      c = document.createElement("div");
    for (c.innerHTML = a; c.firstChild;) b.appendChild(c.firstChild);
    return b
  }
  
  function startTimer(start, duration, display) {
    let countdownMain = document.querySelector("#countdown-main");
    console.log("startTimer");
    var diff, minutes, seconds;
  
    function timer() {
      diff = duration - (((Date.now() - start) / 1000) | 0);
      minutes = (diff / 60) | 0;
      seconds = (diff % 60) | 0;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;
      display.textContent = minutes + ":" + seconds;
      if (diff <= 0) {
        clearInterval(inti);
        if (countdownMain){
          countdownMain.innerHTML = "{{ settings.cart_countdown_text_over }}";
          start = Date.now() + 1000;
        }
      }
    };
    timer();
    let inti = setInterval(timer, 1000);
  }
  let countdownWrapper = `
      <div id="countdown-main" class="countdown-main">
        {% if settings.cart_countdown_text != blank %} 
          {{ settings.cart_countdown_text }} 
        {% endif %} 
        <span id="time"></span> 
        {% if settings.cart_countdown_text != blank %} 
          {{ settings.cart_countdown_text_after }} 
        {% endif %}
      </div>`;
  
  function timing(){
    let minutes = 1;
    let ten = 60 * minutes;
    let starttime = Date.now();
    let xcnt = readCookie('prtcntdwn');
    if (xcnt) {
      if (starttime < xcnt) {
        ten = (xcnt - starttime) / 1000;
      } else {
        eraseCookie('ptcntdwn');
        createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
      }
    } else {
      createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
    }
    const display = document.querySelector('#time');
    startTimer(starttime, ten, display);
  }
  
  subscribeToCartStateUpdate(state => {
    let cartCountdown = document.querySelector("#cart_countdown");
    //console.log("cookie");
    //console.log(document.cookie);
    if(document.cookie.includes("prtcntdwn")){
      console.log("cookie prtcntdwn is there");
    }
    if (!countdownMain ){
      cartCountdown.innerHTML = countdownWrapper;
    }
    timing();

  });
  
  subscribeToCartAjaxRequests(( requestState ) => {
    if (requestState.requestType === "change" ){
      console.log(requestState.requestType === "change" );
      eraseCookie('prtcntdwn');
    }
  });


    function suggestedUpsells() {
        // Slider for suggested upsell products
        $('.owl-carousel').owlCarousel({
            loop: true,
            margin: 10,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: true,
                    dots: false
                }
            }
        });

        // Heading for upsells
        const upsellActive = document.querySelectorAll(".MyCartUpsells_ItemWrapper");
        const upsellsWrapper = document.querySelector(".MyCartUpsells_SuggestedContainer");
        const suggestionsTitle = document.querySelector("#MyCartUpsells_MainTitle");

        if (upsellActive.length > 0) {
            if (!suggestionsTitle) {
                upsellsWrapper.insertAdjacentHTML("afterbegin", `<h2 id="MyCartUpsells_MainTitle" class="MyCart_H2 MyCartUpsells_MainTitle">Diese Produkte könnten Ihnen auch gefallen</h2>`)
            } else {
                //console.log("title already added");
            }
        }

        const submitButtons = document.querySelectorAll(".MyCartUpsells_SubmitButton");
        submitButtons.forEach(button => {
            button.addEventListener("click", event => {
                closeUpsell();
            });
        });
    }
    suggestedUpsells();

    subscribeToCartStateUpdate(state => {
      suggestedUpsells();
    });

</script>


<script type="module">
  import { subscribeToCartStateUpdate } from '{{ "liquid-ajax-cart-v1.10.0.js" | asset_url }}';
  
  subscribeToCartStateUpdate(state => {
    addCartTotalDiscount();
  });
  
  export function addCartTotalDiscount() {   
    const discountsWrapper = document.querySelector("#MyCart_DiscountWrapper");
    const discounts = document.querySelectorAll(".MyCart_ItemDiscount");
    if (discountsWrapper) {
        discountsWrapper.remove();
    }
    
    const totalCartWrapper = document.querySelector("#MyCart_TotalFinalWrapper");
    if (totalCartWrapper) {
      totalCartWrapper.insertAdjacentHTML("afterend",
        `<div id="MyCart_DiscountWrapper" class="MyCart_DiscountInfo MyCart_FooterText MyCart_HighlightedText">
            <span>Sie sparen  </span>
            <p id="MyCart_ItemDiscountTotal"></p>
        </div>`);
    }
    
    let sum = 0;
    let totalPrice = 0;
    if (discounts) {
      totalPrice = document.querySelector(".MyCart_FinalPrice");
      if (totalPrice){
        totalPrice = totalPrice.innerText;
        totalPrice = totalPrice.replace("€", "").trim();
        totalPrice = 0 + parseFloat(totalPrice.replace(".", "").replace(",", "."));
      }
      
      discounts.forEach(element => {
        let discount = element.innerText.replace("€", "").trim();
        sum = sum + parseFloat(discount.replace(".", "").replace(",", "."));
      });
      sum = sum - totalPrice;
      sum = Intl.NumberFormat("de-DE", { style: "currency", currency: "EUR" }).format(sum);
    }
    
    const totalDiscountElement = document.querySelector("#MyCart_ItemDiscountTotal");
    if (totalDiscountElement) {
      totalDiscountElement.innerText = sum;
    }
  }
  
  addCartTotalDiscount();
</script>

<script>
  function overlayOn() {
    document.getElementById("MyCart_Overlay").style.display = "block";
  }
  function overlayOff() {
    document.getElementById("MyCart_Overlay").style.display = "none";
    document.querySelector("#MyCart_Slider").classList.add("MyCartCloses");
    closeUpsell();
  }
  function UpsellOverlayOn() {
    const upsellOverlay = document.querySelector("#MyCart_UpsellOverlay");
    upsellOverlay.style.display = "block";
  }
  function UpsellOverlayOff() {
    const upsellOverlay = document.querySelector("#MyCart_UpsellOverlay");
    upsellOverlay.style.display = "none";
  }
  function closeUpsell() {
    //const mainUpsellContainer = event.target.closest(".MyCartUpsells_MainContainer");
    const cartUpsellWrapper = document.querySelectorAll(".MyCartUpsells_MainContainer");
    cartUpsellWrapper.forEach(element => {
        element.style.transform = "translateX(100%)";
    });
    //mainUpsellContainer.style.transform = "translateY(100%)";
    UpsellOverlayOff();
  }
  function openCartUpsell() {
    const id = event.target.dataset.upsellId;
    const firstPrice = event.target.dataset.firstPriceAvailable;
    const comparedPrice = event.target.dataset.firstComparedPrice;
    const firstPriceNumber = firstPrice.substr(0, 2);
    const comparedPriceNumber = comparedPrice.substr(0, 2);
    const cartUpsellWrapper = document.querySelector("#cartUpsellWrapper_" + id);
    //cartUpsellWrapper.style.display = "block";
    cartUpsellWrapper.setAttribute("data-status", "active");
    cartUpsellWrapper.style.transform = "translateX(0%)";
    const priceElement = document.querySelector("#cartUpsellWrapper_" + id + " .MyCart_UpsellPrice");
    const comparedPriceElement = document.querySelector("#cartUpsellWrapper_" + id + " .MyCart_ComparedPrice");
    priceElement.textContent = firstPrice;
    if(firstPriceNumber < comparedPriceNumber){
      comparedPriceElement.textContent = comparedPrice;    
    } else if (firstPriceNumber === comparedPriceNumber) {
      priceElement.classList.remove("MyCart_HighlightedText");
    }
    UpsellOverlayOn();
  }

  function selectVariable() {
    console.log("function select Variable");
    const productId = event.target.dataset.productId;
    //console.log("productId " + productId);
    let blockIndex = parseInt(event.target.dataset.blockIndex, 10);
    //console.log("blockIndex " + blockIndex);
    let selectedUpsell = null;

    if (blockIndex == 1) {
        let upsellsBlock1 = [window.upsell1_block1, window.upsell2_block1, window.upsell3_block1, window.upsell4_block1];

        upsellsBlock1 = upsellsBlock1.filter(upsell => {
            if (upsell.id) {
                return upsell;
            }
        });

        upsellsBlock1.find(upsell => {
            if (productId == upsell.id) {
                selectedUpsell = upsell;
            }
        });
    } else if (blockIndex == 2) {
        let upsellsBlock2 = [window.upsell1_block2, window.upsell2_block2, window.upsell3_block2, window.upsell4_block2];

        upsellsBlock2 = upsellsBlock2.filter(upsell => {
            if (upsell.id) {
                return upsell;
            }
        });

        upsellsBlock2.find(upsell => {
            if (productId == upsell.id) {
                selectedUpsell = upsell;
            }
        });
    } else if (blockIndex == 3) {
        let upsellsBlock3 = [window.upsell1_block3, window.upsell2_block3, window.upsell3_block3, window.upsell4_block3];

        upsellsBlock3 = upsellsBlock3.filter(upsell => {
            if (upsell.id) {
                return upsell;
            }
        });

        upsellsBlock3.find(upsell => {
            if (productId == upsell.id) {
                selectedUpsell = upsell;
            }
        });
    } else if (blockIndex == 4) {
        let upsellsBlock4 = [window.upsell1_block4, window.upsell2_block4, window.upsell3_block4, window.upsell4_block4];

        upsellsBlock4 = upsellsBlock4.filter(upsell => {
            if (upsell.id) {
                return upsell;
            }
        });

        upsellsBlock4.find(upsell => {
            if (productId == upsell.id) {
                selectedUpsell = upsell;
            }
        });
    }

    //console.log("selectedUpsell ");
    //console.log(selectedUpsell);
    let available = false;
    let variantId = '';
    const opt1 = document.getElementById('select-one-' + productId)?.value;
    const opt2 = document.getElementById('select-two-' + productId)?.value;
    const opt3 = document.getElementById('select-three-' + productId)?.value;

    for (var i = 0; i < selectedUpsell.variants.length; i++) {
        let variant = selectedUpsell.variants[i];
        variantId = variant.id;
        let variantPrice = variant.price;
        let variantComparePrice = variant.compare_at_price;
        let priceElement = document.querySelector(`#formUpsell_${productId} .MyCart_UpsellPrice`);
        let comparePriceElement = document.querySelector(`#formUpsell_${productId} .MyCart_ComparedPrice`);
        let variantAvailability = variant.available;
      
        variantPrice = variantPrice / 100;
        variantComparePrice = variantComparePrice / 100;
      
        if (opt3 && opt2) {
          //console.log("opt3 && opt2");
          if (variantAvailability) {
            //console.log("available");
            if (variant.option1 == opt1 && variant.option2 == opt2 && variant.option3 == opt3 && variant.available) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = true;
              break;
            }
          } else {
            //console.log("not available");
            if (variant.option1 == opt1 && variant.option2 == opt2 && variant.option3 == opt3) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = false;
              break;
            }
          }
        }
        if (!opt3 && opt2) {
          //console.log("!opt3 && opt2");
          if (variantAvailability) {
            //console.log("available");
            if (variant.option1 == opt1 && variant.option2 == opt2) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = true;
              break;
            }
          } else {
            //console.log("not available");
            if (variant.option1 == opt1 && variant.option2) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = false;
              break;
            }
          }
        }

        if (!opt3 && !opt2) {
          //console.log("!opt3 && !opt2");
          if (variantAvailability) {
            //console.log("available");
            if (variant.option1 == opt1) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = true;
              break;
            }
          } else {
            //console.log("not available");
            if (variant.option1 == opt1) {
              priceElement.textContent = variantPrice.toFixed(2).replace(".", ",") + " €";
              if (variantPrice < variantComparePrice){
                comparePriceElement.textContent = variantComparePrice.toFixed(2).replace(".", ",") + " €";
              } else {
                priceElement.classList.remove("MyCart_HighlightedText");
              }
              available = false;
              break;
            }
          }
        }
    }
    //console.log("variantId" + variantId);
    if (variantId != '') {
        document.getElementById('product-select-' + productId).value = variantId;
    } else {
        document.getElementById('product-select-' + productId).value = '';
    }
    console.log("available");
    console.log(available);
    if (available === true) {
      console.log("Hinzufügen");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton span').innerHTML = 'Hinzufügen';
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').removeAttribute("disabled");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').classList.remove("Button--secondary");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').classList.add("Button--primary");
    } else {
      console.log("Ausverkauft");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton span').innerHTML = 'Ausverkauft';
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').setAttribute("disabled", "disabled");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').classList.remove("Button--primary");
      document.querySelector('.MyCartUpsells_MainContainer[data-status=active] button.MyCartUpsells_SubmitButton').classList.add("Button--secondary");
    }
  }
</script>