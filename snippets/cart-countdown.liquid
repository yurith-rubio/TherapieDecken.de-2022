<script type="module">
  
  import { subscribeToCartAjaxRequests, subscribeToCartStateUpdate } from '{{ "liquid-ajax-cart-v1.10.0.js" | asset_url }}';

  const cartOverlay = document.getElementById("MyCart_Overlay");
  if (cartOverlay) {
    cartOverlay.addEventListener("cart_open", () => {
      createCartCountdown();
    });
  }
  
  function createCookie(a, b, c) {
    console.log("function createCookie");
    if (c) {
      var d = new Date;
      d.setTime(d.getTime() + c * 60 * 1e3);
      var e = "; expires=" + d.toUTCString()
    } else var e = "";
    document.cookie = a + "=" + b + e + "; path=/"
  }
  
  function readCookie(a) {
    for (var b = a + "=", c = document.cookie.split(";"), d = 0; d < c.length; d++) {
      for (var e = c[d]; " " == e.charAt(0);) e = e.substring(1, e.length);
      if (0 == e.indexOf(b)){
        console.log("readCookie result ");
        console.log(e.substring(b.length, e.length));
        return e.substring(b.length, e.length);
      } 
    }
    return null
  }
  
  function eraseCookie(a) {
    createCookie(a, "", -1)
  }
  
  function crtmedir(a) {
    var b = document.createDocumentFragment(),
      c = document.createElement("div");
    for (c.innerHTML = a; c.firstChild;) b.appendChild(c.firstChild);
    return b
  }
  
  function startTimer(start, duration, display) {
    let countdownMain = document.querySelector("#countdown-main");
    var diff, minutes, seconds;
  
    function timer() {
      diff = duration - (((Date.now() - start) / 1000) | 0);
      minutes = (diff / 60) | 0;
      seconds = (diff % 60) | 0;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;
      display.textContent = minutes + ":" + seconds;
      if (diff <= 0) {
        clearInterval(inti);
        if (countdownMain){
          countdownMain.innerHTML = "{{ settings.cart_countdown_text_over }}";
          start = Date.now() + 1000;
        }
      }
    };
    timer();
    let inti = setInterval(timer, 1000);
  }


  subscribeToCartAjaxRequests(( requestState ) => {
    let countdownMain = document.querySelector("#countdown-main");
    let cartCountdown = document.querySelector("#cart_countdown");
    if (!cartCountdown) return;
    
    if (requestState.requestType === "change" ){
      console.log("cart changed ");
      console.log(requestState.requestType === "change" );
      eraseCookie('prtcntdwn');
    }
    if(requestState.requestType === "update"){
      console.log("cart updated ");
    }
    if(requestState.requestType === "add"){
      console.log("product added ");
      let countdownWrapper = `
      <div id="countdown-main" class="countdown-main">
        {% if settings.cart_countdown_text != blank %} 
          {{ settings.cart_countdown_text }} 
        {% endif %} 
        <span id="time"></span> 
        {% if settings.cart_countdown_text != blank %} 
          {{ settings.cart_countdown_text_after }} 
        {% endif %}
      </div>`;
      
      if (!countdownMain){
        cartCountdown.innerHTML = countdownWrapper;

        let minutes = 1;
        let ten = 60 * minutes;
        let starttime = Date.now();
        let xcnt = readCookie('prtcntdwn');
        if (xcnt) {
          if (starttime < xcnt) {
            ten = (xcnt - starttime) / 1000;
          } else {
            eraseCookie('ptcntdwn');
            createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
          }
        } else {
          createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
        }
        const display = document.querySelector('#time');
        startTimer(starttime, ten, display);
      }
    }
  });
  function createCartCountdown() {

    /*
    if(document.cookie.includes("prtcntdwn")){
      console.log("cookie prtcntdwn is there");
    }*/
    
    console.log("state changed ");
    let countdownWrapper = `
    <div id="countdown-main" class="countdown-main">
      {% if settings.cart_countdown_text != blank %} 
        {{ settings.cart_countdown_text }} 
      {% endif %} 
      <span id="time"></span> 
      {% if settings.cart_countdown_text != blank %} 
        {{ settings.cart_countdown_text_after }} 
      {% endif %}
    </div>`;
    
    if (!countdownMain){
      cartCountdown.innerHTML = countdownWrapper;

      let minutes = 1;
      let ten = 60 * minutes;
      let starttime = Date.now();
      let xcnt = readCookie('prtcntdwn');
      if (xcnt) {
        if (starttime < xcnt) {
          ten = (xcnt - starttime) / 1000;
        } else {
          eraseCookie('ptcntdwn');
          createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
        }
      } else {
        createCookie('prtcntdwn', Date.now() + (ten * 1000), ten + 1);
      }
      const display = document.querySelector('#time');
      startTimer(starttime, ten, display);
    }
  }
  
  subscribeToCartStateUpdate(state => {
    createCartCountdown();
  });
  


</script>